<?xml version="1.0" ?>
<robot name="virat" command="$(find xacro)/xacro -- inorder '$(find Gazebo_Virat)urdf/virat.urdf">
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

            <!-- Plugin update rate in Hz -->
            <updateRate>100</updateRate>

            <!-- Name of left joint, defaults to `left_joint` -->
            <leftJoint>lwheel_bot2</leftJoint>

            <!-- Name of right joint, defaults to `right_joint` -->
            <rightJoint>rwheel_bot2</rightJoint>

            <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
            <wheelSeparation>0.166</wheelSeparation>

            <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
            <wheelDiameter>0.1</wheelDiameter>

            <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <wheelAcceleration>1.0</wheelAcceleration>

            <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
            <wheelTorque>20</wheelTorque>

            <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
            <commandTopic>cmd_vel</commandTopic>

            <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
            <odometryTopic>odom</odometryTopic>

            <!-- Odometry frame, defaults to `odom` -->
            <odometryFrame>odom</odometryFrame>

            <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
            <robotBaseFrame>bot2</robotBaseFrame>

            <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
            <odometrySource>1</odometrySource>

            <!-- Set to true to publish transforms for the wheel links, defaults to false -->
            <publishWheelTF>true</publishWheelTF>

            <!-- Set to true to publish transforms for the odometry, defaults to true -->
            <publishOdom>true</publishOdom>

            <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
            <publishWheelJointState>true</publishWheelJointState>

            <!-- Set to true to swap right and left wheels, defaults to true -->
            <legacyMode>false</legacyMode>
        </plugin>
    </gazebo>

    <link name="castors1">
        <inertial>
            <mass value="20"/>
            <origin rpy="0 0 0" xyz="0.107 0 0.0"/>
            <inertia ixx="0.3" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
        <collision name="collision">
            <origin rpy="0 0 0" xyz="0.107 0 0.0"/>
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/castors1/meshes/castors1.dae"/>
            </geometry>
        </collision>
        <visual name="visual">
            <origin rpy="0 0 0" xyz="0.107 0 0.0"/>
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/castors1/meshes/castors1.dae"/>
            </geometry>
        </visual>
    </link>

    <link name="bot2">
        <inertial>
            <mass value="200"/>
            <!-- <origin rpy="0 0 0" xyz="0 0 0"/> -->
            <inertia ixx="0" ixy="0" ixz="0" iyy="0.0" iyz="0" izz="0"/>
        </inertial>
        <collision name="collision">
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/bot2/meshes/bot2.dae"/>
            </geometry>
        </collision>
        <visual name="visual">
            <!-- <origin rpy="0 0 0" xyz="0 0 0"/> -->
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/bot2/meshes/bot2.dae"/>
            </geometry>
        </visual>
    </link>

    <joint name="castor_bot" type="fixed">
        <parent link="bot2"/>
        <child link="castors1"/>
    </joint>
    
    <link name="left_wheel">
        <inertial>
            <mass value="10"/>
            <origin rpy="0 0 0" xyz="0 0.083 0.0"/>
            <inertia ixx="0.3" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
        <collision name="collision">
            <origin rpy="0 0 0" xyz="0 0.083 0.0"/>
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/tyre1/meshes/tyre1.dae"/>
            </geometry>
        </collision>
        <visual name="visual">
            <origin rpy="0 0 0" xyz="0 0.083 0.0"/>
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/tyre1/meshes/tyre1.dae"/>
            </geometry>
        </visual>
    </link>

    <link name="right_wheel">
        <inertial>
            <mass value="10"/>
            <origin rpy="0 0 0" xyz="0 -0.083 0.0"/>
            <inertia ixx="0.3" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
        <collision name="collision">
            <origin rpy="0 0 0" xyz="0 -0.083 0.0"/>
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/tyre1/meshes/tyre1.dae"/>
            </geometry>
        </collision>
        <visual name="visual">
            <origin rpy="0 0 0" xyz="0 -0.083 0.0"/>
            <geometry>
                <mesh scale="0.25 0.25 0.25" filename="package://Gazebo_Virat/models/tyre1/meshes/tyre1.dae"/>
            </geometry>
        </visual>
    </link>

    <joint name="lwheel_bot2" type="continuous">
        <parent link="bot2"/>
        <child link="left_wheel"/>
        <axis xyz="0 1 0"/>
        <origin xyz="0 0 0"/>
    </joint>

    <joint name="rwheel_bot2" type="continuous">
        <parent link="bot2"/>
        <child link="right_wheel"/>
        <axis xyz="0 0.3 0"/>
        <origin xyz="0 0 0"/>
    </joint>
    
    
    <!-- Camera -->
    <link name="camera_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
      <box size="0.05 0.05 0.05"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
      <box size="0.05 0.05 0.05"/>
        </geometry>
        <material name="blue"/>
      </visual>

      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    
    <joint name="camera_joint" type="fixed">
      <parent link="bot2"/>
      <child link="camera_link"/>
      <axis xyz="0 1 0" />
      <origin xyz="0.2 0 0.27" rpy="0 0.5 0"/>
    </joint>

    <!-- camera -->
    <gazebo reference="camera_link">
      <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>virat/camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_frame</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
</robot>
 
 
